{"version":3,"file":"component---src-pages-using-ssr-js-47d764333bb5876931fb.js","mappings":"uKAkDA,IArCe,IAAmB,IAAD,MAAjB,SAAEA,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOV,GACP,0BACEO,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,yDC4CP,IA5EA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEV,EAAK,SAAEN,GAAU,EAC3C,MAAM,KAAEI,IAASF,EAAAA,EAAAA,gBAAe,YAc1Be,EAAkBD,GAAeZ,EAAKC,aAAaW,YACnDE,EAAgC,QAApB,EAAGd,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCAEA,gBAAC,IAAM,KAML,0BAAQa,IAAI,gDAAgDC,OAAK,IACjE,0BAAQD,IAAI,gDAAgDC,OAAK,IACjE,0BAAQD,IAAI,gDAAgDC,OAAK,IACjE,0BAAQD,IAAI,gDAAgDC,OAAK,IAEjE,0BAAQC,KAAK,mBAAiB,47BA2B9B,6BAAQH,EAAkBZ,EAAK,MAAMY,EAAiBZ,GACtD,wBAAMgB,KAAK,cAAcC,QAASN,IAClC,wBAAMO,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASN,IACzC,wBAAMO,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAnB,EAAKC,oBAAY,aAAjB,EAAmBoB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASjB,IACpC,wBAAMgB,KAAK,sBAAsBC,QAASN,KAIzCjB,EAGP,C,6GClFA,MA4Ba0B,EAAO,IAAM,gBAAC,IAAG,CAACpB,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEqB,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACEpB,MAAO,CAAEqB,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJX,IAAKQ,EAAWI,UAElB,yBAAG,kCAC+B,IAChC,qBAAGhB,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAAiB,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\n\n import { useStaticQuery, graphql } from \"gatsby\"\n\nimport { Helmet } from \"react-helmet\"\n\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <> \n\n    <Helmet>\n\n\n\n\n      {/* 添加Google Analytics脚本（只添加一次） */}\n      <script src=\"https://www.google-analytics.com/analytics.js\" async />\n      <script src=\"https://www.google-analytics.com/analytics.js\" async />\n      <script src=\"https://www.google-analytics.com/analytics.js\" async />\n      <script src=\"https://www.google-analytics.com/analytics.js\" async />\n      {/* 添加自定义的JavaScript函数 */}\n      <script type=\"text/javascript\">\n        {`\n          function show(x) {\n            var pubs = document.getElementsByClassName('pub');\n            for (var i=0; i<pubs.length; i++) {\n              if ((\" \"+pubs[i].className+\" \").indexOf(\" \"+x+\" \") >= 0) {\n                pubs[i].style.display = \"inline\";\n                pubs[i].style.opacity = '1';\n              } else {\n                pubs[i].style.display = \"none\";\n                pubs[i].style.opacity = '0';\n              }\n            }\n          }\n\n          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n          })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n          ga('create', 'UA-76469747-1', 'auto');\n          ga('send', 'pageview');\n        `}\n      </script>\n\n       \n   \n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n   </Helmet>\n\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["children","data","useStaticQuery","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","description","metaDescription","defaultTitle","src","async","type","name","content","property","author","Head","serverData","width","borderRadius","alt","message","Link","to"],"sourceRoot":""}