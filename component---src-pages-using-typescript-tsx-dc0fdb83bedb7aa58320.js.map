{"version":3,"file":"component---src-pages-using-typescript-tsx-dc0fdb83bedb7aa58320.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCvCX,MAYMC,EAAe,CACnBC,WAAY,OACZC,MAAO,QACPC,QAAS,WACTC,OAAQ,OACRC,QAAS,OACTC,WAAY,UASRC,EAAgB,CACpBL,MAAO,QACPM,eAAgB,OAChBC,SAAU,OACVC,WAAY,OACZP,QAAS,UAGX,IAnCe,IACb,0BAAQQ,MAAOX,GACb,sBAAIW,MAAO,CAAEC,UAAW,UACxB,2BACE,gBAAC,EAAAd,KAAI,CAACC,GAAG,IAAIY,MAAOJ,GAAe,MAAS,KAC5C,gBAAC,EAAAT,KAAI,CAACC,GAAG,UAAUY,MAAOJ,GAAe,QAAW,KACpD,gBAAC,EAAAT,KAAI,CAACC,GAAG,eAAeY,MAAOJ,GAAe,QAAW,KACzD,gBAAC,EAAAT,KAAI,CAACC,GAAG,kBAAkBY,MAAOJ,GAAe,kBAAqB,M,yDCwC5E,IArCe,IAAmB,IAAD,MAAjB,SAAEM,GAAU,EAC1B,MAAMtB,GAAOuB,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAAxB,EAAKI,KAAKqB,oBAAY,aAAtB,EAAwB3B,QAAK,UAChD,uBACEsB,MAAO,CACLM,OAAO,SACPC,SAAS,sBACTf,QAAQ,uBAGV,4BAAOU,GACP,0BACEF,MAAO,CACLQ,UAAU,iBACVV,SAAS,mBAEZ,MACI,IAAIW,MAAOC,cAAc,gBAC5B,IACA,qBAAGxB,KAAK,4BAA2B,YAGtC,C,+CCDP,IAnCA,SAAa,GAAmC,IAAD,QAAlC,YAAEyB,EAAW,MAAEjC,EAAK,SAAEwB,GAAU,EAC3C,MAAM,KAAElB,IAASmB,EAAAA,EAAAA,gBAAe,YAc1BS,EAAkBD,GAAe3B,EAAKqB,aAAaM,YACnDE,EAAgC,QAApB,EAAG7B,EAAKqB,oBAAY,aAAjB,EAAmB3B,MAExC,OACE,gCACE,6BAAQmC,EAAkBnC,EAAK,MAAMmC,EAAiBnC,GACtD,wBAAMoC,KAAK,2BAA2BC,QAAQ,gDAC9C,wBAAMD,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASrC,IACnC,wBAAMsC,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAA/B,EAAKqB,oBAAY,aAAjB,EAAmBY,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASrC,IACpC,wBAAMoC,KAAK,sBAAsBC,QAASH,IACzCV,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => (\n  <header style={headerStyles}>\n    <h1 style={{ textAlign: \"left\" }}>{/*安全AI实验室*/}</h1>\n    <nav>\n      <Link to=\"/\" style={navLinkStyles}>主页</Link> |  \n      <Link to=\"/resume\" style={navLinkStyles}>个人简介</Link> | \n      <Link to=\"/publication\" style={navLinkStyles}>近期工作</Link> |\n      <Link to=\"/Call_for_Paper\" style={navLinkStyles}>Call for Paper</Link> |\n    </nav>\n  </header>\n)\n\nconst headerStyles = {\n  background: \"#333\",        // 深色背景\n  color: \"white\",            // 白色文字\n  padding: \"5px 20px\",       // 较小的内边距，减少高度\n  height: \"50px\",            // 明确设定高度\n  display: \"flex\",           // 使用 Flex 布局\n  alignItems: \"center\",      // 垂直居中\n}\n\nconst navStyles = {\n  display: \"flex\",           // 水平排列链接\n  justifyContent: \"flex-start\", // 链接靠左对齐（可改为 space-around）\n  gap: \"15px\",               // 每个链接之间的间距\n}\n\nconst navLinkStyles = {\n  color: \"white\",            // 链接颜色\n  textDecoration: \"none\",    // 去掉下划线\n  fontSize: \"14px\",          // 字体大小稍微减小\n  fontWeight: \"bold\",        // 加粗\n  padding: \"0 10px\",         // 增加链接内间距\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"google-site-verification\" content=\"0duOuR8u3-1yTOLj1EV2w6cWdrRuN64oW_M9C1lHiZA\" />\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","headerStyles","background","color","padding","height","display","alignItems","navLinkStyles","textDecoration","fontSize","fontWeight","style","textAlign","children","useStaticQuery","siteTitle","siteMetadata","margin","maxWidth","marginTop","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}